# syntax=docker/dockerfile:1.0-windows
FROM mcr.microsoft.com/windows/servercore:ltsc2022

# Use PowerShell as shell
SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop';"]

# 1. Download the MSYS2 installer
RUN Invoke-WebRequest -Uri 'https://github.com/msys2/msys2-installer/releases/download/2024-01-13/msys2-x86_64-20240113.exe' -OutFile 'msys2-installer.exe'

# 2. Install MSYS2 silently
RUN Start-Process -FilePath '.\\msys2-installer.exe' -ArgumentList '/S', 'InstallLocation=C:\\msys64' -Wait

# 3. Wait for bash.exe to exist with retry + logging
RUN Write-Host 'Waiting for C:\msys64\usr\bin\bash.exe...'; `
    $bashPath = 'C:\\msys64\\usr\\bin\\bash.exe'; `
    $maxWait = 30; `
    for ($i = 0; $i -lt $maxWait; $i++) { `
        if (Test-Path $bashPath) { Write-Host 'Found bash.exe'; break } `
        Start-Sleep -Seconds 2; `
        Write-Host "Waiting... ($i)" `
    }; `
    if (!(Test-Path $bashPath)) { throw 'MSYS2 did not install correctly: bash.exe not found.' }

# 4. Clean up installer
RUN Remove-Item 'msys2-installer.exe'

# 5. Update ENV PATH for later layers
ENV PATH="C:\\msys64\\usr\\bin;C:\\msys64\\mingw64\\bin;%PATH%"

# 6. Bash sanity check with detailed output
RUN if (Test-Path 'C:\\msys64\\usr\\bin\\bash.exe') { `
        Write-Host 'bash.exe exists'; `
        & 'C:\\msys64\\usr\\bin\\bash.exe' --version `
    } else { `
        throw 'bash.exe still not found at sanity check!' `
    }

# 7. Final default command
CMD ["C:\\msys64\\usr\\bin\\bash.exe", "-l"]